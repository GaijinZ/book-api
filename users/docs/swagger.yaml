definitions:
  models.Authentication:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      last_name:
        type: string
      password:
        type: string
      role:
        type: string
    required:
    - email
    type: object
host: localhost:5000
info:
  contact: {}
  title: UserAPI Service
  version: "1.0"
paths:
  /users/{userID}:
    put:
      consumes:
      - application/json
      description: Updates a user with the provided data
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      - description: Updated user object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Updates a user data
  /v1/users:
    get:
      consumes:
      - application/json
      description: Retrieves all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      summary: Get all users
    post:
      consumes:
      - application/json
      description: Creates a new user with the provided data
      parameters:
      - description: User object to be created
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      summary: Create a new user
  /v1/users/{user_id}:
    get:
      consumes:
      - application/json
      description: Retrieves user details by the provided ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get user details
  /v1/users/{user_id}/{delete_id}:
    delete:
      consumes:
      - application/json
      description: Deletes a user
      parameters:
      - description: User ID to delete
        in: path
        name: deleteID
        required: true
        type: integer
      - description: Delete ID to authorize
        in: path
        name: delete_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      security:
      - ApiKeyAuth: []
      summary: Delete a user
  /v1/users/activate:
    get:
      consumes:
      - application/json
      description: Activates a user account
      parameters:
      - description: User ID to activate
        in: query
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Activate a user account
  /v1/users/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and generate JWT token
      parameters:
      - description: User credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.Authentication'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Authenticate user
  /v1/users/logout:
    post:
      description: Revoke user's JWT token
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Logout user
swagger: "2.0"
